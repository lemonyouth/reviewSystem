name: Full CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root123
          MYSQL_DATABASE: reviewdb
          MYSQL_USER: bekyt
          MYSQL_PASSWORD: reviewpass
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to initialize..."
          sleep 20

      - name: Run Tests
        run: ./mvnw test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/reviewdb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
          SPRING_DATASOURCE_USERNAME: bekyt
          SPRING_DATASOURCE_PASSWORD: reviewpass

  build-and-push:
    needs: test  # 依赖 test 任务
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        # Build the JAR
      - run: ./mvnw package -DskipTests
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/review-app:latest
  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/review-app:latest
            docker stop review-app || true
            docker rm review-app || true
            docker run -d --name review-app -p 80:8080 ${{ secrets.DOCKERHUB_USERNAME }}/review-app:latest